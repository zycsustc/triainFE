{"ast":null,"code":"var _jsxFileName = \"/Users/zycsustc/workspace/train/src/App.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.onClickExactPath = async () => {\n      const url = this.getPaths(\"exactPath\") + this.state.exactPath;\n      const response = await axios.get(url);\n      this.setState({\n        result: response.data\n      });\n    };\n\n    this.onClickShortestPath = async () => {\n      const url = this.getPaths(\"shortest\") + this.state.source + \"/\" + this.state.target;\n      const data = (await axios.get(url)).data;\n      this.setState({\n        result: data,\n        shortestPath: true\n      });\n    };\n\n    this.onClickConditionOnStops = async () => {\n      let url = \"\";\n\n      if (this.state.condition === \"Max\") {\n        url = this.getPaths(\"maxNumberStops\") + \"Max/\" + this.state.source + \"/\" + this.state.source + \"/\" + this.state.number;\n      } else {\n        url = this.getPaths(\"exactNumberStops\") + this.state.source + \"/\" + this.state.target + \"/\" + this.state.number;\n      }\n\n      const data = (await axios.get(url)).data;\n      this.setState({\n        result: data\n      });\n    };\n\n    this.onClickMaxDistance = async () => {\n      const url = this.getPaths(\"maxDistance\");\n    };\n\n    this.getDistanceByPath = async () => {\n      const path = this.state.result;\n      let formattedPath = \"\";\n      const list = path.slice(1, path.length - 1).split(\", \");\n      list.forEach(stop => {\n        formattedPath += stop;\n      });\n      const url = this.getPaths(\"exactPath\") + formattedPath;\n      const distance = (await axios.get(url)).data;\n      this.setState({\n        distance: distance\n      });\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentWillMount() {\n    this.setState({\n      result: \"result\",\n      nodes: [\"A\", \"B\", \"C\", \"D\", \"E\"]\n    });\n  }\n\n  handleChange(event) {\n    this.setState({\n      exactPath: event.target.value\n    });\n  }\n\n  handleSourceChange(event) {\n    this.setState({\n      source: event.target.value\n    });\n  }\n\n  handleTargetChange(event) {\n    this.setState({\n      target: event.target.value\n    });\n  }\n\n  handleConditionChange(event) {\n    this.setState({\n      condition: event.target.value\n    });\n  }\n\n  handleNumberChange(event) {\n    this.setState({\n      number: event.target.value\n    });\n  }\n\n  handleMaxDistanceChange(event) {\n    this.setState({\n      max: event.target.value\n    });\n  }\n\n  getPaths(path) {\n    const baseUrl = \"http://localhost:8080/shortestPath/\";\n    const exactNumberStops = baseUrl + \"exactNumberStops/\";\n    const maxNumberStops = baseUrl + \"stops/\";\n    const exactPath = baseUrl + \"exactPath/\";\n    const maxDistance = baseUrl + \"maxDistance/\";\n\n    switch (path) {\n      case \"shortest\":\n        return baseUrl;\n\n      case \"exactNumberStops\":\n        return exactNumberStops;\n\n      case \"maxNumberStops\":\n        return maxNumberStops;\n\n      case \"exactPath\":\n        return exactPath;\n\n      case \"maxDistance\":\n        return maxDistance;\n\n      default:\n        return \"\";\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"header\", {\n      className: \"App-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 21\n      }\n    }, \"Welcome to ThoughtWorks Train Manage System!\")), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-grid-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-exact-path\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 29\n      }\n    }, \"Get Distance By Exact Path\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      placeholder: \"input like ABC\",\n      value: this.state.value,\n      onChange: this.handleChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickExactPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 29\n      }\n    }, \"Execute\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-condition-stops\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 29\n      }\n    }, \"Get Number of Trips With Condition on Stops\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.condition,\n      onChange: this.handleConditionChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 33\n      }\n    }, \"Select Condition\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Max\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 33\n      }\n    }, \"Max\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Equal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 33\n      }\n    }, \"Equal\")), this.state.condition ? this.state.condition === \"Max\" ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n      id: \"source\",\n      value: this.state.source,\n      onChange: this.handleSourceChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"fake\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 45\n      }\n    }, \"Select Start City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 77\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.number,\n      placeholder: \"input number of stops\",\n      onChange: this.handleNumberChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickConditionOnStops,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 41\n      }\n    }, \"Execute\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.source,\n      onChange: this.handleSourceChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 45\n      }\n    }, \"Select Start City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 77\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.target,\n      onChange: this.handleTargetChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 41\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 45\n      }\n    }, \"Select End City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 77\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.number,\n      placeholder: \"input number of stops\",\n      onChange: this.handleNumberChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickConditionOnStops,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 41\n      }\n    }, \"Execute\")) : null), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-condition-distance\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 29\n      }\n    }, \"Get Paths with Maximum Distance\"), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.source,\n      onChange: this.handleSourceChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 33\n      }\n    }, \"Select Start City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 65\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"select\", {\n      value: this.state.target,\n      onChange: this.handleTargetChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 33\n      }\n    }, \"Select End City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 65\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"input\", {\n      value: this.state.max,\n      placeholder: \"input max distance\",\n      onChange: this.handleMaxDistanceChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 29\n      }\n    }, \"Execute\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-shortest-path\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 29\n      }\n    }, \"Get Shortest Path And Distance\"), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"source\",\n      value: this.state.source,\n      onChange: this.handleSourceChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 33\n      }\n    }, \"Select Start City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 65\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"select\", {\n      id: \"target\",\n      value: this.state.target,\n      onChange: this.handleTargetChange.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"\",\n      disabled: true,\n      selected: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 33\n      }\n    }, \"Select End City\"), this.state.nodes.map(node => /*#__PURE__*/React.createElement(\"option\", {\n      value: node,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 65\n      }\n    }, node))), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.onClickShortestPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 29\n      }\n    }, \"Get Path\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.getDistanceByPath,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 29\n      }\n    }, \"Get Distance\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App-result\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 29\n      }\n    }, this.state.result), this.state.distance ? /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 52\n      }\n    }, \"Distance: \", this.state.distance) : null))), /*#__PURE__*/React.createElement(\"footer\", {\n      className: \"App-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }\n    }, \"All rights reserved by ThoughtWorks.\"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/zycsustc/workspace/train/src/App.js"],"names":["React","Component","axios","App","constructor","props","onClickExactPath","url","getPaths","state","exactPath","response","get","setState","result","data","onClickShortestPath","source","target","shortestPath","onClickConditionOnStops","condition","number","onClickMaxDistance","getDistanceByPath","path","formattedPath","list","slice","length","split","forEach","stop","distance","handleChange","bind","componentWillMount","nodes","event","value","handleSourceChange","handleTargetChange","handleConditionChange","handleNumberChange","handleMaxDistanceChange","max","baseUrl","exactNumberStops","maxNumberStops","maxDistance","render","map","node"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nclass App extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleChange = this.handleChange.bind(this);\n    }\n\n    componentWillMount() {\n        this.setState({\n            result: \"result\",\n            nodes: [\"A\", \"B\", \"C\", \"D\", \"E\"],\n        })\n    }\n\n    onClickExactPath = async () => {\n        const url = this.getPaths(\"exactPath\")+this.state.exactPath\n        const response = await axios.get(url);\n        this.setState({\n            result: response.data,\n        })\n    }\n\n    onClickShortestPath = async () => {\n        const url = this.getPaths(\"shortest\")+this.state.source+\"/\"+this.state.target\n        const data = (await axios.get(url)).data;\n        this.setState({\n            result: data,\n            shortestPath: true\n        })\n    }\n\n    onClickConditionOnStops = async () => {\n        let url = \"\"\n        if(this.state.condition === \"Max\"){\n            url = this.getPaths(\"maxNumberStops\")+\"Max/\"+this.state.source+\"/\"+this.state.source+\"/\"+this.state.number\n        } else {\n            url = this.getPaths(\"exactNumberStops\")+this.state.source+\"/\"+this.state.target+\"/\"+this.state.number\n        }\n        const data = (await axios.get(url)).data;\n        this.setState({\n            result: data\n        })\n    }\n\n    onClickMaxDistance = async () => {\n        const url = this.getPaths(\"maxDistance\")\n    }\n\n    getDistanceByPath = async () => {\n        const path = this.state.result\n        let formattedPath = \"\";\n        const list = path.slice(1, path.length-1).split(\", \")\n        list.forEach((stop) => {formattedPath += stop})\n        const url = this.getPaths(\"exactPath\")+formattedPath\n        const distance =  (await axios.get(url)).data\n        this.setState({\n            distance: distance\n        })\n    }\n\n    handleChange(event) {\n        this.setState({exactPath: event.target.value});\n    }\n\n    handleSourceChange(event) {\n        this.setState({source: event.target.value });\n    }\n\n    handleTargetChange(event) {\n        this.setState({target: event.target.value });\n    }\n\n    handleConditionChange(event) {\n        this.setState({condition: event.target.value});\n    }\n\n    handleNumberChange(event) {\n        this.setState({number: event.target.value})\n    }\n\n    handleMaxDistanceChange(event) {\n        this.setState({max: event.target.value})\n    }\n\n    getPaths(path) {\n        const baseUrl = \"http://localhost:8080/shortestPath/\"\n        const exactNumberStops = baseUrl+\"exactNumberStops/\"\n        const maxNumberStops = baseUrl+\"stops/\"\n        const exactPath = baseUrl+\"exactPath/\"\n        const maxDistance = baseUrl+\"maxDistance/\"\n\n        switch (path) {\n            case \"shortest\":\n                return baseUrl\n            case \"exactNumberStops\":\n                return exactNumberStops\n            case \"maxNumberStops\":\n                return maxNumberStops\n            case \"exactPath\":\n                return exactPath\n            case \"maxDistance\":\n                return maxDistance\n            default:\n                return \"\"\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <header className=\"App-header\">\n                    <h2>Welcome to ThoughtWorks Train Manage System!</h2>\n                </header>\n                <main>\n                    <div className=\"App-grid-container\">\n                        <div className=\"App-exact-path\">\n                            <h4>Get Distance By Exact Path</h4>\n                            <input type=\"text\" placeholder=\"input like ABC\" value={this.state.value} onChange={this.handleChange}/>\n                            <button onClick={this.onClickExactPath}>Execute</button>\n                        </div>\n                        <div className=\"App-condition-stops\">\n                            <h4>Get Number of Trips With Condition on Stops</h4>\n                            <select value={this.state.condition} onChange={this.handleConditionChange.bind(this)}>\n                                <option value=\"\" disabled selected>Select Condition</option>\n                                <option value=\"Max\">Max</option>\n                                <option value=\"Equal\">Equal</option>\n                            </select>\n                            {this.state.condition ?\n                                this.state.condition===\"Max\" ?\n                                    <>\n                                        <select id=\"source\" value={this.state.source} onChange={this.handleSourceChange.bind(this)}>\n                                            <option value=\"fake\" disabled selected>Select Start City</option>\n                                            {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                                        </select>\n                                        <input value={this.state.number} placeholder=\"input number of stops\" onChange={this.handleNumberChange.bind(this)}/>\n                                        <button onClick={this.onClickConditionOnStops}>Execute</button>\n                                    </>\n                                    :\n                                    <>\n                                        <select value={this.state.source} onChange={this.handleSourceChange.bind(this)}>\n                                            <option value=\"\" disabled selected>Select Start City</option>\n                                            {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                                        </select>\n                                        <select value={this.state.target} onChange={this.handleTargetChange.bind(this)}>\n                                            <option value=\"\" disabled selected>Select End City</option>\n                                            {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                                        </select>\n                                        <input value={this.state.number} placeholder=\"input number of stops\" onChange={this.handleNumberChange.bind(this)}/>\n                                        <button onClick={this.onClickConditionOnStops}>Execute</button>\n                                    </>\n                                : null\n                            }\n                        </div>\n                        <div className=\"App-condition-distance\">\n                            <h4>Get Paths with Maximum Distance</h4>\n                            <select value={this.state.source} onChange={this.handleSourceChange.bind(this)}>\n                                <option value=\"\" disabled selected>Select Start City</option>\n                                {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                            </select>\n                            <select value={this.state.target} onChange={this.handleTargetChange.bind(this)}>\n                                <option value=\"\" disabled selected>Select End City</option>\n                                {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                            </select>\n                            <input value={this.state.max} placeholder=\"input max distance\" onChange={this.handleMaxDistanceChange.bind(this)}/>\n                            <button>Execute</button>\n                        </div>\n                        <div className=\"App-shortest-path\">\n                            <h4>Get Shortest Path And Distance</h4>\n                            <select id=\"source\" value={this.state.source} onChange={this.handleSourceChange.bind(this)}>\n                                <option value=\"\" disabled selected>Select Start City</option>\n                                {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                            </select>\n                            <select id=\"target\" value={this.state.target} onChange={this.handleTargetChange.bind(this)}>\n                                <option value=\"\" disabled selected>Select End City</option>\n                                {this.state.nodes.map((node) => <option value={node}>{node}</option>)}\n                            </select>\n                            <button onClick={this.onClickShortestPath}>Get Path</button>\n                            <button onClick={this.getDistanceByPath}>Get Distance</button>\n                        </div>\n                        <div className=\"App-result\">\n                            <p>{this.state.result}</p>\n                            {this.state.distance ? <p>Distance: {this.state.distance}</p> : null}\n                        </div>\n                    </div>\n                </main>\n                <footer className=\"App-footer\">\n                    All rights reserved by ThoughtWorks.\n                </footer>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}